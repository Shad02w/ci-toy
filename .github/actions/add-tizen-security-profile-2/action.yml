name: Add Tizen Security Profile
description: Add Tizen Security Profile

inputs:
  author-cert:
    description: Author certificate (.crt file) base64 encoded
    required: true
  author-key:
    description: Key for author certificatea (.p12 file) base64 encoded
    required: true
  author-password:
    description: Password for author certificate (.pwd file) base64 encoded
    required: true
  author-ca:
    description: CA for author certificate (.crt file) base64 encoded
    required: true
  distributor-key:
    description: Key for distributor certificate (.p12 file) base64 encoded
    required: true
  distributor-password:
    description: Password for distributor certificate (.pwd file) base64 encoded
    required: true

runs:
  using: "composite"
  steps:
    - name: Create certificates directory
      shell: bash
      run: |
        mkdir -p ${{ github.action_path }}/certs

    - name: Set environment variables for file paths
      shell: bash
      run: |
        # Set file paths as environment variables
        echo "AUTHOR_CERT_PATH=${{ github.action_path }}/certs/author.crt" >> $GITHUB_ENV
        echo "AUTHOR_KEY_PATH=${{ github.action_path }}/certs/author.p12" >> $GITHUB_ENV
        echo "AUTHOR_PWD_PATH=${{ github.action_path }}/certs/author.pwd" >> $GITHUB_ENV
        echo "AUTHOR_CA_PATH=${{ github.action_path }}/certs/author-ca.crt" >> $GITHUB_ENV
        echo "DISTRIBUTOR_KEY_PATH=${{ github.action_path }}/certs/distributor.p12" >> $GITHUB_ENV
        echo "DISTRIBUTOR_PWD_PATH=${{ github.action_path }}/certs/distributor.pwd" >> $GITHUB_ENV

    - name: Decode base64 certificates and keys
      shell: bash
      run: |
        # Decode author certificate files
        echo "${{ inputs.author-cert }}" | base64 -d > ${{ env.AUTHOR_CERT_PATH }}
        echo "${{ inputs.author-key }}" | base64 -d > ${{ env.AUTHOR_KEY_PATH }}
        echo "${{ inputs.author-password }}" | base64 -d > ${{ env.AUTHOR_PWD_PATH }}
        echo "${{ inputs.author-ca }}" | base64 -d > ${{ env.AUTHOR_CA_PATH }}
        
        # Decode distributor certificate files
        echo "${{ inputs.distributor-key }}" | base64 -d > ${{ env.DISTRIBUTOR_KEY_PATH }}
        echo "${{ inputs.distributor-password }}" | base64 -d > ${{ env.DISTRIBUTOR_PWD_PATH }}

    - name: Get Tizen profiles path
      shell: bash
      run: |
        GLOBAL_PROFILES_PATH="$(tizen cli-config -l | grep "default.profiles.path" | cut -d'=' -f2)"
        echo "TIZEN_PROFILES_PATH=$GLOBAL_PROFILES_PATH" >> $GITHUB_ENV

    - name: Update tizen profiles.xml
      shell: bash
      run: |
        cat > ${{ env.TIZEN_PROFILES_PATH }} <<EOF
        <?xml version="1.0" encoding="UTF-8" standalone="no"?>
        <profiles active="default" version="3.1">
        <profile name="default">
        <profileitem ca="${{ env.AUTHOR_CA_PATH }}" distributor="0" key="${{ env.AUTHOR_KEY_PATH }}" password="${{ env.AUTHOR_PWD_PATH }}" rootca=""/>
        <profileitem ca="" distributor="1" key="${{ env.DISTRIBUTOR_KEY_PATH }}" password="${{ env.DISTRIBUTOR_PWD_PATH }}" rootca=""/>
        <profileitem ca="" distributor="2" key="" password="" rootca=""/>
        </profile>
        </profiles>
        EOF

    - name: List Tizen Security Profiles
      shell: bash
      run: tizen security-profiles list

