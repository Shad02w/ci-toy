name: Tizen build

on:
  push:
    branches:
      - tizen-build
jobs:
  build-docs:
    name: Build Docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup node and pnpm
        uses: ./.github/actions/setup-node-and-pnpm

      - name : Install dependencies
        run: pnpm install

      - name: Build the application
        run: npx nx build docs

      - name: Zip the dist folder
        run: zip -r docs.zip app/docs/dist

      - name: Upload the zipped dist folder
        uses: actions/upload-artifact@v4
        with:
          name: docs-source.zip
          path: docs.zip

  build-tizen:
    name: Build Tizen App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup node and pnpm
        uses: ./.github/actions/setup-node-and-pnpm

      - name : Install dependencies
        run: pnpm install

      - name: Build the application
        run: npx nx build web

      - name: Prepare Tizen CLI
        uses: ./.github/actions/perpare-tizen-cli

      - name: Tizen Build the application
        working-directory: app/web
        run: tizen build-web -- ./dist

      - name: Tizen package the application
        working-directory: app/web
        run:  |
          tizen package -t wgt -o out -- ./dist/.buildResult 

      - name: Get the file
        working-directory: app/web/out
        id: get-filename
        run: |
          filename=$(ls *.wgt)
          echo "filename=$filename" >> $GITHUB_OUTPUT

      - name: Upload the zipped dist folder
        uses: actions/upload-artifact@v4
        with:
          name: game.gotha.wgt
          path: app/web/out/${{ steps.get-filename.outputs.filename }}
