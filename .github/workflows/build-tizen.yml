name: Docs and tizen build

on:
  workflow_dispatch:
  push:
    branches:
      - tizen-build

jobs:
  build-docs:
    name: Build Docs
    runs-on: ubuntu-latest
    env:
      WORKSPACE_PATH: app/docs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup node and pnpm
        uses: ./.github/actions/setup-node-and-pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build the application
        run: npx nx build docs --verbose

      - name: Zip the dist folder
        run: zip -r docs.zip ${{ env.WORKSPACE_PATH }}/dist

      - name: Upload the zipped dist folder
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: docs.zip
          if-no-files-found: error

  build-tizen:
    name: Build Tizen App
    runs-on: ubuntu-latest
    env:
      WORKSPACE_PATH: app/web
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup node and pnpm
        uses: ./.github/actions/setup-node-and-pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build the application
        run: npx nx build web --verbose

      - name: Prepare Tizen CLI
        uses: ./.github/actions/perpare-tizen-cli

      - name: Tizen Build the application
        working-directory: app/web
        run: tizen build-web -- ./dist

      - name: Add tizen security profile
        id: tizen-security
        uses: ./.github/actions/add-tizen-security-profile
        with:
          author-ca: ${{ secrets.TIZEN_AUTHOR_CA }}
          author-key: ${{ secrets.TIZEN_AUTHOR_KEY }}
          author-password: ${{ secrets.TIZEN_PASSWORD }}
          distributor-ca: ${{ secrets.TIZEN_DISTRIBUTOR_CA }}
          distributor-key: ${{ secrets.TIZEN_DISTRIBUTOR_KEY }}
          distributor-password: ${{ secrets.TIZEN_PASSWORD }}

      - name: Tizen package the application
        working-directory: ${{ env.WORKSPACE_PATH }}
        run: |
          # Use the same DBUS session from the security profile step
          export DBUS_SESSION_BUS_ADDRESS=${{ steps.tizen-security.outputs.dbus-session-address }}
          tizen package -t wgt -o out -- ./dist/.buildResult

      # - name: log cli.log
      #   run: cat ${{ github.workspace }}/tizen-studio-data/cli/logs/cli.log

      # - name: Get Web version and build hash
      #   id: versioning
      #   uses: ./.github/actions/get-ctv-version-and-hash

      # - name: Calculate package filename
      #   id: package-filename
      #   run: echo "filename=game-gotham-${{ steps.versioning.outputs.version }}-${{ steps.versioning.outputs.hash }}" >> $GITHUB_OUTPUT

      # - name: Rename wgt file
      #   run: |
      #     mv $(ls ${{ env.WORKSPACE_PATH }}/out/*.wgt) ${{ env.WORKSPACE_PATH }}/out/${{ steps.package-filename.outputs.filename }}.wgt

      # - name: Upload the wgt file
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: tizen
      #     path: ${{ env.WORKSPACE_PATH }}/out/*
      #     if-no-files-found: error
