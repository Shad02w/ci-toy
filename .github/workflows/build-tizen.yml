name: Docs and tizen build

on:
  push:
    branches:
      - tizen-build
jobs:
  build-docs:
    name: Build Docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup node and pnpm
        uses: ./.github/actions/setup-node-and-pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build the application
        run: npx nx build docs

      - name: Zip the dist folder
        run: zip -r docs.zip app/docs/dist

      - name: Upload the zipped dist folder
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: docs.zip
          if-no-files-found: error

  build-tizen:
    name: Build Tizen App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup node and pnpm
        uses: ./.github/actions/setup-node-and-pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build the application
        run: npx nx build web

      - name: Prepare Tizen CLI
        uses: ./.github/actions/perpare-tizen-cli

      - name: Tizen Build the application
        working-directory: app/web
        run: tizen build-web -- ./dist

      - name: Tizen package the application
        working-directory: app/web
        run: |
          tizen package -t wgt -o out -- ./dist/.buildResult

      - name: Get Web version and build hash
        id: versioning
        uses: ./.github/actions/get-ctv-version-and-hash

      - name: Calculate package filename
        id: package-filename
        run: echo "filename=game-gotham-${{ steps.versioning.outputs.version }}-${{ steps.versioning.outputs.hash }}" >> $GITHUB_OUTPUT

      - name: Rename wgt file
        run: |
          mv $(ls app/web/out/*.wgt) app/web/out/${{ steps.package-filename.outputs.filename }}.wgt

      - name: Upload the wgt file
        uses: actions/upload-artifact@v4
        with:
          name: tizen
          path: app/web/out/*
          if-no-files-found: error

  release:
    name: Send a release message to Slack
    runs-on: ubuntu-latest
    needs: [build-docs, build-tizen]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: List builds
        run: ls -la ~/builds

      - name: Setup node and pnpm
        uses: ./.github/actions/setup-node-and-pnpm

      - name: Download the artifact
        uses: actions/download-artifact@v4
        with:
          path: ./build-assets
          merge-multiple: true

      - name: Upload files to Slack
        uses: adrey/slack-file-upload-action@master
        with:
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel: ${{ vars.SLACK_RELEASE_CHANNEL_ID }}
          path: ./build-assets
          initial_comment: "Build artifacts from GitHub Actions"
