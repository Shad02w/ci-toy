name: Tizen build

on:
  push:
    branches:
      - tizen-build
jobs:
  build:
    name: Build Tizen App
    runs-on: ubuntu-latest
    env:
      TIZEN_SDK_URL: https://download.tizen.org/sdk/Installer/tizen-studio_5.6/web-cli_Tizen_Studio_5.6_ubuntu-64.bin
      TIZEN_SDK_FILENAME: tizen-studio-installer.bin
      TIZEN_STUDIO_PATH: ${{ github.workspace }}/tizen-studio
    steps:


      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup node and pnpm
        uses: ./.github/actions/setup-node-and-pnpm

      - name : Install dependencies
        run: pnpm install

      - name: Build the application
        run: npx nx build web

      - name: Get hash of Tizen SDK installer URL
        run: echo "TIZEN_SDK_SHA256=$(echo $TIZEN_SDK_URL | sha256sum | awk '{print $1}')" >> $GITHUB_ENV

      - name: Cache Tizen SDK installer
        id: cache-tizen-sdk
        uses: actions/cache@v4
        with:
          path: ${{ env.TIZEN_SDK_FILENAME }}
          key: ${{ runner.os }}-tizen-sdk-${{ env.TIZEN_SDK_SHA256 }}

      - name: Download Tizen SDK installer
        if: steps.cache-tizen-sdk.outputs.cache-hit != 'true'
        run: curl -o $TIZEN_SDK_FILENAME "$TIZEN_SDK_URL"

      - name: Make Tizen SDK executable
        run: chmod a+x $TIZEN_SDK_FILENAME

      - name: Install Tizen Studio
        run: ./${{ env.TIZEN_SDK_FILENAME }} --accept-license "${{ env.TIZEN_STUDIO_PATH }}"

      - name: Export Tizen Studio path
        run: echo "${{ env.TIZEN_STUDIO_PATH }}/tools/ide/bin" >> $GITHUB_PATH

      - name: Log the Tizen CLI version
        run: tizen version

      - name: Tizen Build the application
        working-directory: app/web
        run: tizen build-web -- ./dist

      - name: list the dist .buildResult
        run: ls -la dist/.buildResult

